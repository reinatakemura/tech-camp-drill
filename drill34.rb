# シーザー暗号と呼ばれる暗号があります。これはアルファベットをある文字数分ずらすという暗号方式で、例えば「a」を２文字分ずらす（進める）と「c」になります。

# 「frqjudwxodwlrq」という文字列があり、これを３文字ずらす（戻す）と復号できることがわかっています。それを実現させるコードを記述してください。

char = "frqjudwxodwlrq"
# char = "apple"

puts "暗号化前：#{char}"

# 暗号化した文字列を格納するための配列を定義
code = []

# chars:文字列の各文字列の配列で返す → split:文字列を limit 個まで分割し、結果を文字列の配列で返すのも同じ
char.chars.each do |char|
  num = char.ord - 97
  # 「a ~ z」の文字コードでの範囲は「97 ~ 122」
  num2 = (num - 3) % 26
  num3 = num2 + 97
  # ord:文字列の最初の文字の文字コードを整数で返す
  # chr:エンコーディングに対応する一文字からなる文字列を返す
  code << num3.chr
end

# 配列codeに入った文字列を全て連結させて出力
puts "暗号化後：#{code.join("")}"
